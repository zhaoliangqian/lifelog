背景：
单库的瓶颈： 性能、可用性、可维护性

分库类型：
垂直分库、水平分库 -> 会导致分布式事务问题
分布式事务的2种方案：XA二阶段提交、Base理论的柔性事务

定义： 
数据节点： ds_0.table_0
绑定表：主表和子表分区键一致
广播表：字典

分片算法： 
精确、范围、复合、hint
分片策略： 
标准、复合、行表达式、hint、None

过程：
Sql解析->路由->sql改写-> sql执行 -> 结果归并
1、sql解析：设计词法分析、语法分析等技术
2、路由：分为有分区键和无分区键2种情况
有分区键：直接路由（hint）、标准（单表||绑定表）、笛卡尔积（多表 & 非绑定表）
无分区键：全库表（ddl/dml/dql）、全库(tcl)、全实例（dcl）、单播（describe）、阻断（use database）
3、改写：
  （1）表改写，由逻辑表改成实际分片中的表
  （2）补列
  （3）分页修正
  （4）批量插入拆分
  （5）优化：如果路由至单节点则无需优化、流式归并？
 4、执行
  连接模式：内存限制模式，为每张表持有一个连接，适用于olap；连接限制模式，一次同库不同表的操作，持有同一个连接，适用于oltp；
  自动化执行引擎会自行选择连接模式：根据每个数据库连接需要执行的sql数量； 
  执行分为分组执行和归并结果2个阶段，在发送执行事件时，订阅者（如分布式事务引擎）会进行相应的处理； 
5、归并
  遍历归并、排序归并（merge sort）、
  
  
 
